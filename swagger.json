{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Swagger so-yummy-app-backend",
    "description": "This is end-points documentation So-yummy-app-backend for swagger-ui-express"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [{ "url": "http://localhost:8080/api/" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Recipes",
      "description": "Recipes endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/RegistrationUser"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user into the system",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout a user by invalidating their access and refresh tokens",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "User successfully logged out",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh Access Token",
        "parameters": [],
        "requestBody": {
          "description": "Use refresh token to generate a new access token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A new access token has been generated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "400": {
            "description": "Your token is invalid",
            "content": {}
          },
          "403": {
            "description": "Access Denied. Please try logging in again",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successfully get current user ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/CurrentUser"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update data user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Updates object",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upload data user successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "The JWT access token",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmODliYmYwYjk5MTg2M2QzNmM0ZjJhZiIsImlhdCI6MTYyMDk3MTg3MSwiZXhwIjoxNjIwOTc1NDcxfQ.UuuhN59Gsi7VvLdI6W8VnEKub74veSMiVv4QF4W4XQg"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UpdateUser"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/subscribe": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get subscribe user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successfully get subscribe",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/SubscribeUser"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Auth"],
        "summary": "Post subscribe user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Subscribe object",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully post subscribe",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Subscription" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/recipes/category-list": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Getting a list of categories",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "array",
                      "description": "List of categories",
                      "example": [
                        "Beef",
                        "Breakfast",
                        "Chicken",
                        "Dessert",
                        "Goat",
                        "Lamb",
                        "Miscellaneous",
                        "Pasta",
                        "Pork",
                        "Seafood",
                        "Side",
                        "Starter",
                        "Vegan",
                        "Vegetarian"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/recipes/main-page": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Getting recipes by category for the main page",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "description": "Limits on the list of recipes. Maximum quantity no more than 4"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipes": {
                      "type": "array",
                      "description": "List of categories for the main page",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Title Recipe"
                          },
                          "recipes": {
                            "type": "array",
                            "description": "Recipe array",
                            "items": {
                              "type": "object",
                              "description": "Recipe"
                            }
                          }
                        }
                      },
                      "example": [
                        {
                          "title": "Breakfast",
                          "recipes": "breakfastRecipes"
                        },
                        {
                          "title": "Miscellaneous",
                          "recipes": "miscellaneousRecipes"
                        },
                        {
                          "title": "Chicken",
                          "recipes": "chickenRecipes"
                        },
                        {
                          "title": "Desserts",
                          "recipes": "dessertsRecipes"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/recipes/category/{category}": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Getting recipes by category",
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": true,
            "description": "Category on the list of recipes: Beef, Breakfast, Chicken, Dessert, Goat, Lamb, Miscellaneous, Pasta, Pork, Seafood, Side, Starter, Vegan, Vegetarian"
          },
          {
            "in": "query",
            "name": "page",
            "type": "integer",
            "description": "Page number with the list of category recipes. Page value must be > 0"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipes": {
                      "type": "array",
                      "description": "8 recipes by category",
                      "items": {
                        "type": "object",
                        "description": "Recipe"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/recipes/{id}": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Getting one recipe by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Recipe ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipe": {
                      "type": "object",
                      "description": "Recipe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/favorite": {
      "post": {
        "tags": ["Recipes"],
        "summary": "Adding to favorites a recipe created by the User",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Data for adding a recipe to favorites",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "favorite": {
                    "id": { "type": "string", "description": "Recipe ID" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Recipe added to favorites successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Recipe added to favorites successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Recipe not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Recipes"],
        "summary": "Getting favorite recipes created by the User",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "integer",
            "description": "Page number with the list of User recipes. Default: Page=1. Page value must be > 0"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "description": "Recipe limit quantity on the one page. Default: Limit=4."
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Recipes"
                  },
                  "example": [
                    {
                      "_id": "640cd5ac2d9fecf12e889815",
                      "title": "Roasted Eggplant With Tahini, Pine Nuts, and Lentils",
                      "description": "A vegetarian Middle Eastern dish of roasted eggplant served with a creamy tahini sauce, toasted pine nuts, and lentils.",
                      "thumb": "https://www.themealdb.com/images/media/meals/ysqrus1487425681.jpg",
                      "time": "75"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/favorite/{id}": {
      "delete": {
        "tags": ["Recipes"],
        "summary": "Delete from favorites a recipe created by the User",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Recipe ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Recipe deleted from favorites successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Recipe deleted from favorites successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Recipe not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "The JWT access token"
          },
          "refreshToken": {
            "type": "string",
            "description": "The JWT refresh token"
          },
          "user": {
            "$ref": "#/components/schemas/LoginUser"
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "required": ["refreshToken"],
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "The JWT refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MmEyYWU0NWY0ZGViYWUwZDRjOWYxNSIsImlhdCI6MTY4MDUzMzUxNiwiZXhwIjoxNjgxMTM4MzE2fQ.X9I-RSyshKuQybxosstF3wgIfA-QXnXgfyGcQUbRTKw"
          }
        }
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "The JWT access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmODliYmYwYjk5MTg2M2QzNmM0ZjJhZiIsImlhdCI6MTYyMDk3MTg3MSwiZXhwIjoxNjIwOTc1NDcxfQ.UuuhN59Gsi7VvLdI6W8VnEKub74veSMiVv4QF4W4XQg"
          },
          "refreshToken": {
            "type": "string",
            "description": "The JWT refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmODliYmYwYjk5MTg2M2QzNmM0ZjJhZiIsImlhdCI6MTYyMDk3MTg3MSwiZXhwIjoxNjIwOTc1NDcxfQ.UuuhN59Gsi7VvLdI6W8VnEKub74veSMiVv4QF4W4XQg"
          }
        }
      },
      "UpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "New name of the user"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "Select avatar file"
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Update User's name"
          },
          "avatarURL": {
            "type": "string",
            "description": "Update URL to the user avatar",
            "example": "https://example.com/avatar.jpg"
          }
        }
      },
      "LoginUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's name"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "avatarURL": {
            "type": "string",
            "description": "URL to the user avatar",
            "example": "https://example.com/avatar.jpg"
          }
        }
      },
      "CurrentUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "avatarURL": {
            "type": "string",
            "description": "URL to the user avatar",
            "example": "https://example.com/avatar.jpg"
          }
        }
      },
      "SubscribeUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's name"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "subscribed": {
            "type": "boolean",
            "description": "User's subscribe"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
