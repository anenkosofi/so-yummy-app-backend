{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Swagger so-yummy-app-backend",
    "description": "This is end-points documentation So-yummy-app-backend for swagger-ui-express"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    { "url": "http://localhost:8080/api/" },
    { "url": "https://so-yummy-app-backend.onrender.com/api/" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Recipes",
      "description": "Recipes endpoints"
    },
    {
      "name": "Ingredients",
      "description": "Ingredients endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/RegistrationUser"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user into the system",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout a user by invalidating their access and refresh tokens",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "User successfully logged out",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh Access Token",
        "parameters": [],
        "requestBody": {
          "description": "Use refresh token to generate a new access token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A new access token has been generated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "400": {
            "description": "Your token is invalid",
            "content": {}
          },
          "403": {
            "description": "Access Denied. Please try logging in again",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successfully get current user ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/CurrentUser"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update data user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Updates object",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upload data user successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "The JWT access token",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmODliYmYwYjk5MTg2M2QzNmM0ZjJhZiIsImlhdCI6MTYyMDk3MTg3MSwiZXhwIjoxNjIwOTc1NDcxfQ.UuuhN59Gsi7VvLdI6W8VnEKub74veSMiVv4QF4W4XQg"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UpdateUser"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/subscribe": {
      "post": {
        "tags": ["Auth"],
        "summary": "Post subscribe user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Subscribe object",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful adding subscription",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Subscription successfully added and subscription message sent to email"
                    },
                    "user": {
                      "$ref": "#/components/schemas/SubscribeUser"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/recipes/category-list": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Getting a list of categories",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "array",
                      "description": "List of categories",
                      "example": [
                        "Beef",
                        "Breakfast",
                        "Chicken",
                        "Dessert",
                        "Goat",
                        "Lamb",
                        "Miscellaneous",
                        "Pasta",
                        "Pork",
                        "Seafood",
                        "Side",
                        "Starter",
                        "Vegan",
                        "Vegetarian"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/recipes/main-page": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Getting recipes by category for the main page",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "description": "Limits on the list of recipes. Maximum quantity no more than 4"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipes": {
                      "type": "array",
                      "description": "List of categories for the main page",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Title Recipe"
                          },
                          "recipes": {
                            "type": "array",
                            "description": "Recipe array",
                            "items": {
                              "type": "object",
                              "description": "Recipe"
                            }
                          }
                        }
                      },
                      "example": [
                        {
                          "title": "Breakfast",
                          "recipes": "breakfastRecipes"
                        },
                        {
                          "title": "Miscellaneous",
                          "recipes": "miscellaneousRecipes"
                        },
                        {
                          "title": "Chicken",
                          "recipes": "chickenRecipes"
                        },
                        {
                          "title": "Desserts",
                          "recipes": "dessertsRecipes"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/recipes/category/{category}": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Getting recipes by category",
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": true,
            "description": "Category on the list of recipes: Beef, Breakfast, Chicken, Dessert, Goat, Lamb, Miscellaneous, Pasta, Pork, Seafood, Side, Starter, Vegan, Vegetarian"
          },
          {
            "in": "query",
            "name": "page",
            "type": "integer",
            "description": "Page number with the list of category recipes. Page value must be > 0"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipes": {
                      "type": "array",
                      "description": "8 recipes by category",
                      "items": {
                        "type": "object",
                        "description": "Recipe"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/recipes/{id}": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Getting one recipe by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Recipe ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipe": {
                      "type": "object",
                      "description": "Recipe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/favorite": {
      "post": {
        "tags": ["Recipes"],
        "summary": "Adding to favorites a recipe created by the User",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Data for adding a recipe to favorites",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["favorite"],
                "properties": {
                  "favorite": {
                    "type": "string",
                    "description": "Recipe ID"
                  }
                },
                "example": { "favorite": "640cd5ac2d9fecf12e8898a9" }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Recipe added to favorites successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Recipe added to favorites successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Recipe not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Recipes"],
        "summary": "Getting favorite recipes created by the User",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "integer",
            "description": "Page number with the list of User recipes. Default: Page=1. Page value must be > 0"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "description": "Recipe limit quantity on the one page. Default: Limit=4."
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Recipes"
                  },
                  "example": [
                    {
                      "_id": "640cd5ac2d9fecf12e889815",
                      "title": "Roasted Eggplant With Tahini, Pine Nuts, and Lentils",
                      "description": "A vegetarian Middle Eastern dish of roasted eggplant served with a creamy tahini sauce, toasted pine nuts, and lentils.",
                      "thumb": "https://www.themealdb.com/images/media/meals/ysqrus1487425681.jpg",
                      "time": "75"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/favorite/{id}": {
      "delete": {
        "tags": ["Recipes"],
        "summary": "Delete from favorites a recipe created by the User",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Recipe ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Recipe deleted from favorites successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Recipe deleted from favorites successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Recipe not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/ownRecipes": {
      "post": {
        "tags": ["Recipes"],
        "summary": "Adding a recipe created by the User",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Recipe's object",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RecipeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Recipe added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Recipe not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Recipes"],
        "summary": "Getting a recipes created by the User",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Recipe geted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Recipe not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/ownRecipes/{id}": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Getting one recipe by id created by the User",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Recipe ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipe": {
                      "type": "object",
                      "description": "Recipe"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Recipe not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Recipes"],
        "summary": "Delete a recipe created by the User",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Recipe ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Recipe deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Recipe deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Recipe not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Search for recipes by keyword in the title or by ingredient",
        "parameters": [
          {
            "in": "query",
            "name": "title",
            "type": "string",
            "description": "Keyword in title"
          },
          {
            "in": "query",
            "name": "ingredients",
            "type": "string",
            "description": "Ingredient in the recipe"
          },
          {
            "in": "query",
            "name": "page",
            "type": "integer",
            "description": "Page number with the list of recipes. Default: Page=1. Page value must be > 0"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "description": "Recipe limit quantity on the one page. Default: Limit=12."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total numder of recipes"
                    },
                    "recipes": {
                      "type": "array",
                      "description": "Array recipes",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Recipe's id"
                          },
                          "title": {
                            "type": "string",
                            "description": "Recipe's title"
                          },
                          "category": {
                            "type": "string",
                            "description": "Recipe's category",
                            "enum": [
                              "Beef",
                              "Breakfast",
                              "Chicken",
                              "Dessert",
                              "Goat",
                              "Lamb",
                              "Miscellaneous",
                              "Pasta",
                              "Pork",
                              "Seafood",
                              "Side",
                              "Starter",
                              "Vegan",
                              "Vegetarian"
                            ]
                          },
                          "area": {
                            "type": "string",
                            "description": "Recipe's area"
                          },
                          "instructions": {
                            "type": "string",
                            "description": "Recipe's instructions"
                          },
                          "description": {
                            "type": "string",
                            "description": "Recipe's description"
                          },
                          "thumb": {
                            "type": "string",
                            "description": "Recipe's thumb"
                          },
                          "preview": {
                            "type": "string",
                            "description": "Recipe's preview"
                          },
                          "time": {
                            "type": "string",
                            "description": "Recipe's time"
                          },
                          "popularity": {
                            "type": "integer",
                            "description": "Recipe's popularity"
                          },
                          "favorites": {
                            "type": "array",
                            "description": "Recipe favorites",
                            "items": {}
                          },
                          "likes": {
                            "type": "array",
                            "description": "Recipe likes",
                            "items": {}
                          },
                          "youtube": {
                            "type": "string",
                            "description": "Recipe's youtube link"
                          },
                          "tags": {
                            "type": "array",
                            "description": "Recipe tags",
                            "items": {}
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "Recipe's createdAt"
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": "Recipe's updatedAt"
                          },
                          "ingredients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Ingredients's array",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Ingredients's id"
                                },
                                "ttl": {
                                  "type": "string",
                                  "description": "Ingredients's title"
                                },
                                "desc": {
                                  "type": "string",
                                  "description": "Ingredients's description"
                                },
                                "t": {
                                  "type": "string"
                                },
                                "thb": {
                                  "type": "string",
                                  "description": "Ingredients's thumb"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recipe not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/ingredients/list": {
      "get": {
        "tags": ["Ingredients"],
        "summary": "Getting a list of ingredients",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ingredients": {
                      "type": "array",
                      "description": "Ingredients's array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Ingredients's id"
                          },
                          "ttl": {
                            "type": "string",
                            "description": "Ingredients's title"
                          },
                          "desc": {
                            "type": "string",
                            "description": "Ingredients's description"
                          },
                          "t": {
                            "type": "string"
                          },
                          "thb": {
                            "type": "string",
                            "description": "Ingredients's thumb"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "ingredients not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/popular-recipe": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Getting a popular recipes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipes": {
                      "type": "array",
                      "description": "Array recipes",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Recipe's id"
                          },
                          "title": {
                            "type": "string",
                            "description": "Recipe's title"
                          },
                          "category": {
                            "type": "string",
                            "description": "Recipe's category",
                            "enum": [
                              "Beef",
                              "Breakfast",
                              "Chicken",
                              "Dessert",
                              "Goat",
                              "Lamb",
                              "Miscellaneous",
                              "Pasta",
                              "Pork",
                              "Seafood",
                              "Side",
                              "Starter",
                              "Vegan",
                              "Vegetarian"
                            ]
                          },
                          "area": {
                            "type": "string",
                            "description": "Recipe's area"
                          },
                          "instructions": {
                            "type": "string",
                            "description": "Recipe's instructions"
                          },
                          "description": {
                            "type": "string",
                            "description": "Recipe's description"
                          },
                          "thumb": {
                            "type": "string",
                            "description": "Recipe's thumb"
                          },
                          "preview": {
                            "type": "string",
                            "description": "Recipe's preview"
                          },
                          "time": {
                            "type": "string",
                            "description": "Recipe's time"
                          },
                          "popularity": {
                            "type": "integer",
                            "description": "Recipe's popularity"
                          },
                          "favorites": {
                            "type": "array",
                            "description": "Recipe favorites",
                            "items": {}
                          },
                          "likes": {
                            "type": "array",
                            "description": "Recipe likes",
                            "items": {}
                          },
                          "youtube": {
                            "type": "string",
                            "description": "Recipe's youtube link"
                          },
                          "tags": {
                            "type": "array",
                            "description": "Recipe tags",
                            "items": {}
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "Recipe's createdAt"
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": "Recipe's updatedAt"
                          },
                          "ingredients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Ingredients's array",
                              "properties": {
                                "_id": {
                                  "type": "string",
                                  "description": "User's id"
                                },
                                "id": {
                                  "type": "string",
                                  "description": "Ingredients's id"
                                },
                                "measure": {
                                  "type": "string",
                                  "description": "Ingredients's measure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recipe not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/shopping-list": {
      "post": {
        "tags": ["Ingredients"],
        "summary": "Adding ingredients at shopping-list",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Ingredient's object",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ingredient", "measure"],
                "properties": {
                  "ingredient": {
                    "type": "string",
                    "description": "Ingredients's id"
                  },
                  "measure": {
                    "type": "string",
                    "description": "Ingredients's measure"
                  }
                },
                "example": {
                  "ingredient": "640c2dd963a319ea671e372c",
                  "measure": "2 tablespoons"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ingredients": {
                      "type": "object",
                      "description": "Ingredient's object",
                      "properties": {
                        "ingredient": {
                          "type": "string",
                          "description": "Ingredients's id"
                        },
                        "measure": {
                          "type": "string",
                          "description": "Ingredients's measure"
                        },
                        "owner": {
                          "type": "string",
                          "description": "User's id"
                        },
                        "_id": {
                          "type": "string",
                          "description": "Id"
                        }
                      }
                    }
                  },
                  "example": {
                    "ingredients": {
                      "ingredient": "640c2dd963a319ea671e372c",
                      "measure": "2 tablespoons",
                      "owner": "642c6550abf552690a719ef2",
                      "_id": "643325161fd789fed72b4b8b"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Ingredients not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Ingredients"],
        "summary": "Getting ingredients from shopping-list",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ingredients": {
                      "type": "array",
                      "description": "Ingredient's array",
                      "items": {
                        "type": "object",
                        "description": "Ingredient object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Id"
                          },
                          "ingredient": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Ingredient's Id"
                              },
                              "ttl": {
                                "type": "string",
                                "description": "Ingredient's title"
                              },
                              "desc": {
                                "type": "string",
                                "description": "Ingredient's description"
                              },
                              "t": {
                                "type": "string"
                              },
                              "thb": {
                                "type": "string",
                                "description": "Ingredient's thumb"
                              }
                            }
                          },
                          "measure": {
                            "type": "string",
                            "description": "Ingredients's measure"
                          },
                          "owner": {
                            "type": "string",
                            "description": "User's id"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Ingredients not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/shopping-list/{id}": {
      "delete": {
        "tags": ["Ingredients"],
        "summary": "Delete a ingredient from shopping-list",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Ingredient ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Ingredient deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Ingredient deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Ingredient not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "The JWT access token"
          },
          "refreshToken": {
            "type": "string",
            "description": "The JWT refresh token"
          },
          "user": {
            "$ref": "#/components/schemas/LoginUser"
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "required": ["refreshToken"],
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "The JWT refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MmEyYWU0NWY0ZGViYWUwZDRjOWYxNSIsImlhdCI6MTY4MDUzMzUxNiwiZXhwIjoxNjgxMTM4MzE2fQ.X9I-RSyshKuQybxosstF3wgIfA-QXnXgfyGcQUbRTKw"
          }
        }
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "The JWT access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmODliYmYwYjk5MTg2M2QzNmM0ZjJhZiIsImlhdCI6MTYyMDk3MTg3MSwiZXhwIjoxNjIwOTc1NDcxfQ.UuuhN59Gsi7VvLdI6W8VnEKub74veSMiVv4QF4W4XQg"
          },
          "refreshToken": {
            "type": "string",
            "description": "The JWT refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmODliYmYwYjk5MTg2M2QzNmM0ZjJhZiIsImlhdCI6MTYyMDk3MTg3MSwiZXhwIjoxNjIwOTc1NDcxfQ.UuuhN59Gsi7VvLdI6W8VnEKub74veSMiVv4QF4W4XQg"
          }
        }
      },
      "UpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "New name of the user"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "Select avatar file"
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Update User's name"
          },
          "avatarURL": {
            "type": "string",
            "description": "Update URL to the user avatar",
            "example": "https://example.com/avatar.jpg"
          }
        }
      },
      "LoginUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's name"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "avatarURL": {
            "type": "string",
            "description": "URL to the user avatar",
            "example": "https://example.com/avatar.jpg"
          }
        }
      },
      "CurrentUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "avatarURL": {
            "type": "string",
            "description": "URL to the user avatar",
            "example": "https://example.com/avatar.jpg"
          }
        }
      },
      "SubscribeUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's name"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "subscribed": {
            "type": "boolean",
            "description": "User's subscribe"
          }
        }
      },
      "RecipeRequest": {
        "type": "object",
        "required": [
          "title",
          "category",
          "instructions",
          "description",
          "time",
          "ingredients"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Recipe's title"
          },
          "category": {
            "type": "string",
            "description": "Recipe's category",
            "enum": [
              "Beef",
              "Breakfast",
              "Chicken",
              "Dessert",
              "Goat",
              "Lamb",
              "Miscellaneous",
              "Pasta",
              "Pork",
              "Seafood",
              "Side",
              "Starter",
              "Vegan",
              "Vegetarian"
            ]
          },
          "instructions": {
            "type": "string",
            "description": "Recipe's instructions"
          },
          "description": {
            "type": "string",
            "description": "Recipe's description"
          },
          "time": {
            "type": "string",
            "description": "Recipe's time"
          },
          "ingredients": {
            "type": "array",
            "description": "Ingredient's array",
            "items": {
              "$ref": "#/components/schemas/Ingredient"
            },
            "minItems": 1
          },
          "image": {
            "type": "string",
            "format": "binary",
            "description": "Select imageURL file"
          }
        },
        "example": {
          "title": "Summer Pudding",
          "category": "Dessert",
          "instructions": "Bring out the juices: Wash fruit and gently dry on kitchen paper – keep strawberries separate...",
          "description": "A refreshing dessert made with fresh berries and bread soaked in juice, perfect for summer.",
          "time": "380",
          "ingredients": [
            {
              "id": "640c2dd963a319ea671e3773",
              "measure": "300g"
            }
          ],
          "imageURL": "https://res.cloudinary.com/ddbvbv5sp/image/upload/v1678560621/nf9mpueezfmu9wt0ykqm.jpg"
        }
      },
      "RecipeResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Recipe's title"
          },
          "category": {
            "type": "string",
            "description": "Recipe's category",
            "enum": [
              "Beef",
              "Breakfast",
              "Chicken",
              "Dessert",
              "Goat",
              "Lamb",
              "Miscellaneous",
              "Pasta",
              "Pork",
              "Seafood",
              "Side",
              "Starter",
              "Vegan",
              "Vegetarian"
            ]
          },
          "instructions": {
            "type": "string",
            "description": "Recipe's instructions"
          },
          "description": {
            "type": "string",
            "description": "Recipe's description"
          },
          "time": {
            "type": "string",
            "description": "Recipe's time"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Ingredients's object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Ingredients's id"
                },
                "measure": {
                  "type": "string",
                  "description": "Ingredients's measure"
                }
              }
            }
          },
          "imageURL": {
            "type": "string",
            "description": "Recipe's imageURL"
          },
          "owner": {
            "type": "string",
            "description": "Recipe's owner"
          },
          "_id": {
            "type": "string",
            "description": "Recipe's id"
          },
          "createdAt": {
            "type": "string",
            "description": "Recipe's createdAt"
          },
          "updatedAt": {
            "type": "string",
            "description": "Recipe's updatedAt"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "Ingredient": {
        "type": "object",
        "description": "Ingredients's object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Ingredients's id"
          },
          "measure": {
            "type": "string",
            "description": "Ingredients's measure"
          }
        },
        "required": ["id", "measure"]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
